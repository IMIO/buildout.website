[buildout]

parts =
#    plone
    zope2
    productdistros
    svnproducts
    omelette
    instance
    zopepy
    logrotate

extends = http://dist.plone.org/release/3.2.2/versions.cfg 
versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    elementtree
#    PyXML

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}
url = ${versions:zope2-url}
#url = http://www.zope.org/Products/Zope/2.10.6/Zope-2.10.6-final.tgz
fake-zope-eggs = true
additional-fake-eggs =
    ZConfig
    ZODB3
    pytz

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.

[productdistros]
recipe = plone.recipe.distros
urls = 
    http://plone.org/products/eryr-openlayers/releases/0.1/eryropenlayers.tar
    file://${buildout:directory}/ZPsycopgDA_206.tgz

nested-packages = 
version-suffix-packages = 

[svnproducts]
recipe = infrae.subversion
urls =
    http://svn.communesplone.org/svn/communesplone/contacts/trunk contacts
    http://svn.communesplone.org/svn/communesplone/CPDescriptive/trunk/ CPDescriptive
    http://svn.communesplone.org/svn/communesplone/CPUtils/trunk CPUtils
    http://svn.plone.org/svn/collective/Products.Ploneboard/trunk/Products/Ploneboard@73054 Ploneboard
    http://svn.communesplone.org/svn/communesplone/RICDescriptive/trunk/ RICDescriptive
    http://svn.plone.org/svn/collective/Products.slideshowfolder/trunk/Products/slideshowfolder@85307 slideshowfolder
    http://svn.communesplone.org/svn/communesplone/urban/trunk@3401 urban
    http://svn.communesplone.org/svn/communesplone/ZopeRepository ZopeRepository

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
products = ${instance:products}
packages = ${zope2:location}/lib/python ./

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
#effective-user = 
user = admin:admin
http-address = 8080
#debug-mode = on
verbose-security = on
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %include ${buildout:directory}/zope_add.conf
# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    ${plone:eggs}
    Products.Clouseau
    Products.CacheSetup
    Products.DocFinderTab
    Products.FCKeditor>=2.6.3,<2.6.4
    Products.PloneFormGen>=1.2.7,<1.3
    Products.SimpleAttachment>=3.0.2,<3.0.3
#    Products.slideshowfolder
    appy.pod
    appy.shared
    collective.portlet.tal
    collective.zipfiletransport

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.portlet.tal
    collective.zipfiletransport

products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${svnproducts:location}
    ${plone:products}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[logrotate]
recipe = collective.recipe.template
input = templates/logrotate.conf
output = ${buildout:directory}/logrotate.conf



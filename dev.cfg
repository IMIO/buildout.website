[buildout]
extensions =
    mr.developer
    plone.versioncheck

extends =
    base.cfg
    rsync.cfg
    sources.cfg

allow-picked-versions = true
show-picked-versions = true

always-checkout = force
auto-checkout +=
    cpskin.cirkwi
    cpskin.policy
    cpskin.core
    cpskin.locales
    cpskin.menu
    cpskin.theme
    cpskin.slider
    cpskin.minisite
    cpskin.demo
    cpskin.migration
    cpskin.workflow
    collective.directory
    collective.contentleadimage
    Products.CPUtils
    collective.messagesviewlet
    plone.app.contenttypes
    plone.app.event
#    collective.recipe.buildoutcache
    imio.ckeditortemplates
    collective.ckeditortemplates
    collective.jekyll
    collective.sticky
    collective.plonetruegallery
    collective.geo.leaflet
#    collective.plonefinder
#    collective.ckeditor
#    Solgema.fullcalendar
    plone.app.multilingual

parts +=
#    nginx
#    proxy
    test
    robot
    versioncheck
#    makebuildoutcache

[instance]
#use the instance eggs to extends the base eggs defined in [buildout]
recipe = plone.recipe.zope2instance
http-address = 8080
user = admin:admin

debug-mode = on
verbose-security = on
environment-vars +=
    ENABLE_PRINTING_MAILHOST True

eggs +=
    ${debug-products:eggs}
    Products.PDBDebugMode
    cpskin.demo
    profilehooks
    Products.PTProfiler

zcml +=
    ${debug-products:zcml}
    cpskin.demo

zope-conf-additional =
    extensions ${buildout:directory}/Extensions

    <product-config five.z2monitor>
        bind 0.0.0.0:8888
    </product-config>

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
#extra-paths = ${buildout:directory}/parts/omelette
#include-site-packages = true
eggs =
    Pillow
    Plone
    collective.MockMailHost
    plone.app.testing
    cpskin.core [test]
    cpskin.policy [test]

environment = testenv

[testenv]
zope_i18n_compile_mo_files = true

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[ride,reload]

[makebuildoutcache]
recipe = collective.recipe.buildoutcache

[nginx]
#nginx needs "sudo apt-get install libpcre3 libpcre3-dev"
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.1.14.tar.gz
md5sum = 16d523e395778ef35b49a2fa6ad18af0

[proxy]
recipe = gocept.nginx
configuration =
    worker_processes 1;
    events {
        worker_connections 1024;
    }
    http {

        server {
            listen 127.0.0.1:8000;

            location / {
                rewrite ^/(.*)$ /VirtualHostBase/$scheme/$host:$server_port/liege/fr/VirtualHostRoot/$1 break;
                proxy_pass http://localhost:8080;
                proxy_set_header Host $http_host;
                proxy_redirect default;
            }
        }
        server {
            listen 127.0.0.2:8000;

            location / {
                rewrite ^/(.*)$ /VirtualHostBase/$scheme/$host:$server_port/liege/fr/loisirs/culture/musees/la-boverie/VirtualHostRoot/$1 break;
                proxy_pass http://localhost:8080;
                proxy_set_header Host $http_host;
                proxy_redirect default;
            }
        }
        server {
            listen 127.0.0.3:8000;

            location / {
                rewrite ^/(.*)$ /VirtualHostBase/$scheme/$host:$server_port/liege/en/leisure/culture/museums/la-boverie/VirtualHostRoot/$1 break;
                proxy_pass http://localhost:8080;
                proxy_set_header Host $http_host;
                proxy_redirect default;
            }
        }

    }

[versioncheck]
recipe = zc.recipe.egg
eggs = plone.versioncheck

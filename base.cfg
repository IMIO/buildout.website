[buildout]
allow-picked-versions = false

parts =
    instance
    zopepy
    upgrade
    omelette

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends =
    http://dist.plone.org/release/4.3.15/versions.cfg
    versions-base.cfg

index = http://devpi.imio.be/root/imio/+simple/
# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
# find-links =
#     http://dist.plone.org/release/4.3.6
#     http://dist.plone.org/thirdparty
#     http://download.zope.org/ppix/
#     http://download.zope.org/distribution/
#     http://effbot.org/downloads
#
# allow-hosts +=
#     devpi.imio.be
#     *.plone.org
#     *.zope.org
#     effbot.org
#     *.python.org
#     github.com
#     code.google.com


# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow

# Always unzip eggs
unzip = true

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[instance]
recipe = plone.recipe.zope2instance
#effective-user = zope
user = admin:admin
http-address = 8081
zserver-threads = 2
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true
  TZ Europe/Brussels
  PLONE_CSRF_DISABLED True

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    collective.contact.core
    collective.contact.duplicated
    collective.contact.facetednav
    collective.contact.importexport
    collective.cookiecuttr
    collective.faceted.taxonomywidget
    collective.js.fancybox
    collective.messagesviewlet
    collective.portlet.content
    collective.ptg.fancybox
    collective.ptg.highslide
    collective.recaptcha
    collective.taxonomy
    collective.upgrade
    collective.z3cform.select2
    communesplone.layout
    cpskin.agenda
    cpskin.cirkwi
    cpskin.citizen
    cpskin.diazotheme.dream
    cpskin.diazotheme.dreambasic
    cpskin.diazotheme.dreamRightPortlet
    cpskin.diazotheme.dreamRightPortletBasic
    cpskin.diazotheme.modern
    cpskin.diazotheme.retro
    cpskin.diazotheme.smart
    cpskin.diazotheme.spirit
    cpskin.diazotheme.trendy
    cpskin.diazotheme.trendybasic
    cpskin.policy
    plone.app.multilingual
    Products.CPUtils
    Products.csvreplicata

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.contact.facetednav
    collective.faceted.taxonomywidget
    collective.js.fancybox
    collective.messagesviewlet
    collective.ptg.fancybox
    collective.z3cform.select2-minimal
    cpskin.agenda
    cpskin.citizen
    cpskin.diazotheme.dream
    cpskin.diazotheme.dreambasic
    cpskin.diazotheme.dreamRightPortlet
    cpskin.diazotheme.dreamRightPortletBasic
    cpskin.diazotheme.modern
    cpskin.diazotheme.retro
    cpskin.diazotheme.smart
    cpskin.diazotheme.spirit
    cpskin.diazotheme.trendy
    cpskin.diazotheme.trendybasic
    cpskin.policy

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy


[debug-products]
eggs =
    Products.Clouseau
    Products.DocFinderTab
    Products.PrintingMailHost
    pdbpp
    wildcard.fixpersistentutilities
    Products.PDBDebugMode

[upgrade]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
scripts = upgrade-portals
arguments = args=[
    '--zope-conf', '${instance:location}/etc/zope.conf',
    '--log-file', '${buildout:directory}/var/log/upgrade.log']

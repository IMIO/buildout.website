[buildout]
allow-picked-versions = false

parts =
    instance
    zopepy
    upgrade
    omelette

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends =
    http://dist.plone.org/release/4.3.20/versions.cfg
    versions-base.cfg

find-links +=
    https://eggs.imio.be/find-links/plusimio/
    https://eggs.imio.be/find-links/common/

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow

# Always unzip eggs
unzip = true

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[instance]
recipe = plone.recipe.zope2instance
#effective-user = zope
user = admin:admin
http-address = 8081
zserver-threads = 2
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true
  TZ Europe/Brussels
  PLONE_CSRF_DISABLED True

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    communesplone.layout
    cpskin.agenda
    cpskin.cirkwi
    cpskin.citizen
    cpskin.diazotheme.classic
    cpskin.diazotheme.dream
    cpskin.diazotheme.dreambasic
    cpskin.diazotheme.dreamRightPortlet
    cpskin.diazotheme.dreamRightPortletBasic
    cpskin.diazotheme.newDream
    cpskin.diazotheme.memory
    cpskin.diazotheme.modern
    cpskin.diazotheme.retro
    cpskin.diazotheme.smart
    cpskin.diazotheme.spirit
    cpskin.diazotheme.trendy
    cpskin.diazotheme.trendybasic
    cpskin.diazotheme.vicinity
    cpskin.policy
    collective.contact.core
    collective.contact.duplicated
    collective.contact.facetednav
    collective.contact.importexport
    collective.contentleadimage  # only here because we are not able to delete it
    collective.cookiecuttr
    collective.faceted.taxonomywidget
    collective.js.fancybox
    collective.messagesviewlet
    collective.pivot
    collective.portlet.content
    collective.ptg.fancybox
    collective.ptg.highslide
    collective.recaptcha
    collective.taxonomy
    collective.upgrade
    collective.z3cform.select2
    cpskin.localfood
    plone.app.multilingual
    plone.restapi
    Products.CPUtils
    Products.csvreplicata
    Products.PloneHotfix20210518

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    cpskin.policy
    collective.contact.facetednav
    collective.faceted.taxonomywidget
    collective.js.fancybox
    collective.messagesviewlet
    collective.pivot
    collective.ptg.fancybox
    collective.z3cform.select2-minimal
    cpskin.agenda
    cpskin.citizen
    cpskin.diazotheme.classic
    cpskin.diazotheme.dream
    cpskin.diazotheme.dreambasic
    cpskin.diazotheme.dreamRightPortlet
    cpskin.diazotheme.dreamRightPortletBasic
    cpskin.diazotheme.newDream
    cpskin.diazotheme.memory
    cpskin.diazotheme.modern
    cpskin.diazotheme.retro
    cpskin.diazotheme.smart
    cpskin.diazotheme.spirit
    cpskin.diazotheme.trendy
    cpskin.diazotheme.trendybasic
    cpskin.diazotheme.vicinity

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy


[debug-products]
eggs =
    Products.Clouseau
    Products.DocFinderTab
    Products.PrintingMailHost
    ipdb
    wildcard.fixpersistentutilities
    Products.PDBDebugMode
    collective.catalogcleanup

[upgrade]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
scripts = upgrade-portals
arguments = args=[
    '--zope-conf', '${instance:location}/etc/zope.conf',
    '--log-file', '${buildout:directory}/var/log/upgrade.log']

[buildout]
extensions =
    mr.developer
show-picked-versions = true
allow-picked-versions = false

parts =
    productdistros
    svnproducts
    omelette
    instance1
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends = 
    http://dist.plone.org/release/4.3.2/versions.cfg
    versions-base.cfg

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3.2
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads
    http://b.pypi.python.org
    http://c.pypi.python.org
    http://d.pypi.python.org

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
#    PyXML
#- hotfix -#
#    Products.PloneHotfix20110720  # <= 3.3.5 , <= 4.0.3
#    Products.PloneHotfix20110531  # <= 3.3.5 , <= 4.0.5
#    Products.PloneHotfix20121106  # <= 4.2.2, <= 4.3a2
#    Products.Zope_Hotfix_20110622  # <= 3.3.5 , <= 4.0.7, <= 4.1rc3
#    Products.PloneHotfix20130618  # <=4.2.6, <=4.3.1

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
#    src/communesplone.iconified_document_actions
#    src/communesplone.layout

# Only take stable eggs
#prefer-final = true

# Always unzip eggs
unzip = true

always-checkout = false
auto-checkout +=
#    Products.PloneFormGen
    Products.PloneGazette
#    Solgema.fullcalendar
#    plone.app.multilingual
    collective.contentleadimage
    communesplone.layout

[remotes]
plone = git://github.com/plone
plone_push = git@github.com:plone
collective = git://github.com/collective
collective_push = git@github.com:collective
zopefoundation = git://github.com/zopefoundation
zopefoundation_push = git@github.com:zopefoundation

[sources]
Products.PloneFormGen = git git://github.com/sgeulette/Products.PloneFormGen.git
Products.PloneGazette = git git://github.com/collective/Products.PloneGazette.git
Solgema.fullcalendar = git git://github.com/collective/Solgema.fullcalendar.git
collective.contentleadimage = git git://github.com/collective/collective.contentleadimage.git
communesplone.layout = svn http://svn.communesplone.org/svn/communesplone/communesplone.layout/trunk
#plone.app.multilingual = git git://github.com/plone/plone.app.multilingual.git


# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.

[productdistros]
recipe = plone.recipe.distros
urls = 
#    file://${buildout:directory}/ZPsycopgDA_2013.tgz
nested-packages = 
version-suffix-packages = 

[svnproducts]
recipe = infrae.subversion
urls =
#    http://svn.communesplone.org/svn/communesplone/ACPTranslation/tags/plone3x ACPTranslation
#    http://svn.communesplone.org/svn/communesplone/contacts/tags/0.6 contacts
    http://svn.communesplone.org/svn/communesplone/CPUtils/trunk CPUtils

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}
products = ${instance1:products}
#packages = ${zope2:location}/lib/python ./

[instance1]
recipe = plone.recipe.zope2instance
#effective-user = 
user = admin:admin
http-address = 8081
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zope_add.conf
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Products.DocFinderTab
    Products.PloneFormGen
    Products.PloneGazette
#    Products.PlonePopoll
    Products.csvreplicata
    Solgema.fullcalendar
#    atreal.mailservices
    beyondskins.responsive
#    communesplone.iconified_document_actions
    communesplone.layout
    collective.ckeditor
    collective.contentleadimage
#    collective.easytemplate
    collective.js.fancybox
    collective.pfg.norobots
    collective.plonetruegallery
    collective.portlet.itemview
    collective.ptg.fancybox
    collective.ptg.highslide
    collective.quickupload
    elementtree  # needed by PloneGazette
    plone.app.dexterity
    plone.app.multilingual
    plone.multilingualbehavior

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
#    Solgema.fullcalendar
#    atreal.mailservices
#    communesplone.iconified_document_actions
#    collective.contentleadimage
#    collective.js.fancybox
#    collective.ptg.fancybox
#    collective.tinymcetemplates
#    medialog.subskins

products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${svnproducts:location}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[ipzope]
recipe = zc.recipe.egg
eggs = ipython ${instance1:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance1:location}"
    sys.argv[1:1] = "--profile zope2".split()
scripts = ipython=ipzope

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[buildout]
show-picked-versions = true
allow-picked-versions = false

parts =
    omelette
    instance1
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends = 
    http://dist.plone.org/release/4.3.3/versions.cfg
    sources.cfg
    versions-base.cfg

index = http://pypi.imio.be/imio/imio/+simple/
# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3.3
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

allow-hosts +=
    pypi.imio.be

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow

# Only take stable eggs
#prefer-final = true

# Always unzip eggs
unzip = true


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}

[instance1]
recipe = plone.recipe.zope2instance
#effective-user = zope
user = admin:admin
http-address = 8081
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Products.PloneFormGen
    Products.PloneGazette
    Products.csvreplicata
    Solgema.fullcalendar
    communesplone.layout
    collective.ckeditor
    imio.ckeditortemplates
    collective.contentleadimage
    #collective.js.fancybox
    #collective.pfg.norobots
    collective.plonetruegallery
    #collective.ptg.fancybox
    #collective.ptg.highslide
    collective.quickupload
    ##communesplone.iconified_document_actions
    plone.app.dexterity
    plone.app.multilingual
    plone.multilingualbehavior
    sc.social.bookmarks
    #tecnoteca.googlemap
    #Products.LinguaPlone
    Products.directory
    Products.CPUtils

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
#    Solgema.fullcalendar
#    atreal.mailservices
#    communesplone.iconified_document_actions
#    collective.contentleadimage
#    collective.js.fancybox
#    collective.ptg.fancybox
#    collective.tinymcetemplates
#    medialog.subskins
    imio.ckeditortemplates

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy


[ipzope]
recipe = zc.recipe.egg
eggs = ipython ${instance1:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance1:location}"
    sys.argv[1:1] = "--profile zope2".split()
scripts = ipython=ipzope

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[standard]
recipe = collective.recipe.plonesite
site-id = ${port:cluster}
instance = instance1
default-language = fr
profiles-initial = acptheme.cpskin3:default
                   acptheme.cpskin3:extra
site-replace = false
post-extras = standard-config.py

[debug-products]
eggs =
    Products.Clouseau
    Products.DocFinderTab
    Products.PrintingMailHost
    ipdb
    iw.debug
    plone.reload

zcml =
    iw.debug
